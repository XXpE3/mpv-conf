# 默认音量 100%
volume=100
# 软解
hwdec=d3d11va

# 高优先级
priority=high

profile=gpu-hq
# gpu-hq contains:
#    scale=spline36
#    cscale=spline36
#    dscale=mitchell
#    dither-depth=auto
#    correct-downscaling=yes
#    linear-downscaling=yes
#    sigmoid-upscaling=yes
#    deband=yes

### gpu-api的选择？
## macOS：  只有opengl可选
## Linux：  vulkan或者opengl，推荐vulkan
## Windows：vulkan、d3d11及opengl都可选。三者理论上vulkan性能最好，实际使用上可能差别不大。
## 待 https://github.com/mpv-player/mpv/issues/5237 这个feature request以及
## https://github.com/mpv-player/mpv/pull/5804 这个PR实现后对高位深显示器
## 的用户d3d11独占全屏是唯一出路。如今还没实现，则使用vulkan也没差。vulkan将来在windows下对高位深
## 的支持目前也是未知数。
## https://github.com/mpv-player/mpv/pull/6329 实现d3d11独占全屏。
# 三者无法并存，去掉行首的'#'启用，加上'#'禁用
#----------------------------------------
### 使用d3d11 （mpv对于windows的默认。显卡一定要开自适应电源模式，否则性能比vulkan差）
#gpu-api=d3d11
#----------------------------------------
### 或使用vulkan
gpu-api=d3d11
#----------------------------------------
### 或使用opengl
# gpu-api=opengl
# 对windows，使用angle后端
# gpu-context=angle

# 如果需要记忆上次播放的位置，去掉下面这行的注释。不能与SVP共存，使用SVP必须把此项设为no。
#save-position-on-quit
# 注意，需要mpv.conf所在文件夹有用户写入权限，或者用watch-later-directory=路径来手动指定。
# mpv.conf放APPDATA里是不会有问题的，有问题的是放mpv安装目录但mpv安装目录本身需要管理员权限

# may help with 4K videos
# 现已成为默认
vd-lavc-dr=yes
opengl-pbo=yes

# 如果要插其他视频滤镜，比如deint或者SVP，就要去掉下面这行的注释
#hr-seek-framedrop=no

# "ReClock" replacement
video-sync=display-resample
video-sync-max-video-change=5

temporal-dither
dither-size-fruit=7 # 默认6。会稍微延缓mpv启动
# 有兴趣也可以测试下error diffusion算法

# smooth motion
interpolation

# interpolation使用的算法。详见https://mpv.io/manual/master/#options-tscale
# 一些讨论见 https://github.com/mpv-player/mpv/issues/2685
# 目前的默认为mitchell。总体而言mitchell更平滑（当然不好和SVP插帧比），但会有模糊。oversample没有模糊，但不平滑（基本还原24帧的样子）
# 具体选择哪个请依据自身需求来
tscale=oversample

# 想看log就取消这行的注释。mpv.log会保存到桌面
#log-file="~~desktop/mpv.log"
# 启用校色
icc-profile-auto
icc-3dlut-size=256x256x256 # 默认64x64x64。会稍微延缓mpv启动

# hdr-compute-peak     # 此选项已默认自动识别，支持则自动开启。

# 在mpv.conf所在目录下建一个 shaders_cache 空文件夹，以存放编译好的GPU shaders，加速启动。
# 注意！如果不放APPDATA下，确保该文件夹有用户写入权限。
gpu-shader-cache-dir="~~/shaders_cache"

# 播放结束后不退出
keep-open=yes

ontop # combined with fullscreen, likely to enter fullscreen exclusive mode
# 特别对于vulkan，使用ontop容易让驱动选择进入独占全屏。d3d11需要额外的选项，等https://github.com/mpv-player/mpv/pull/6329实现

# 为了应对VFR，禁用刷新率切换
# 下面这个脚本选项主要是个autospeedwin（自动调节显示器的刷新率）用的
#script-opts=autospeed-nircmd=true,autospeed-speed=false,autospeed-nircmdc="C:\nircmd-x64\nircmdc.exe",autospeed-monitor=0,autospeed-dwidth=1920,autospeed-dheight=1080,autospeed-bdepth=32,autospeed-rates="23;24;25;29;30;50;59;60",autospeed-exitrate=60,autospeed-minspeed=0.9,autospeed-maxspeed=1.1,autospeed-osd=true,autospeed-osdtime=10,autospeed-osdkey=y,autospeed-estfps=false,autospeed-spause=4
# 注意需要自己下载nircmdc，然后在autospeed-nircmdc里给出绝对路径。或者把nircmdc.exe所在位置加到PATH里
# autospeed-monitor=0是主显示器，1、2、3……是其他副显示器
# dwidth dheight bdepth 宽高和位深
# autospeed-rates="23;24;25;29;30;50;59;60",autospeed-exitrate=60 显示器支持的刷新率和退出时应返回的刷新率。23指23.976
# autospeed-spause=4 自动暂停的时间，秒为单位

# WASAPI音频输出（Windows）
# 其他系统请相应更改音频输出方式
ao=wasapi
# 独占音频。不希望其他程序没声音则去掉。
# audio-exclusive=yes
#audio-delay=0.04 # 如需要，可设置音频延迟
# 强制resample成96kHz，24bit（需要音频设备硬件支持）。注意！并非必要！
#audio-samplerate=96000
#audio-format=s32

# 如果双声道系统播放多声道影片时有的声道声音没出现，尝试强制设定为双声道
#audio-channels=stereo
# 规格化：
#audio-normalize-downmix=yes
# 多声道音轨downmix成双声道时，如果觉得背景音过响，角色台词声音小，尝试看看这个：https://github.com/mpv-player/mpv/issues/6563

sub-auto=fuzzy
sub-file-paths=subs
slang=chi,zh-CN,sc,chs
#sid=1
# 字幕显示出来和xy-subfilter不一样？尝试启用下面的设置
#sub-ass-vsfilter-aspect-compat=no   # 关乎字幕是否随视频拉伸
#sub-ass-vsfilter-blur-compat=no   # 关乎字幕模糊的设定
# 即使都用上了也不一致？那不是这两个选项的问题，重新注释掉这两行，回帖问吧。（多半是vsfilter/libass其中一个的bug）

audio-file-auto=fuzzy
#audio-file-paths=audio
alang=jpn,ja,eng,en
#aid=1
# 暂时无法根据其他的metadata选择轨道，mpv又默认偏好外挂轨道，常常选到我不想要的音轨
# 有类似情况的话就用aid=1始终选择第一条音轨再自己手动调吧
# 设计者也是这么推荐的：https://github.com/mpv-player/mpv/issues/967#issuecomment-94744964

screenshot-format=png
screenshot-tag-colorspace=yes
screenshot-high-bit-depth=yes
#screenshot-png-compression=0
#screenshot-png-filter=0

# 以下根据分辨率和视频帧率设置不同的升/降阶算法，以期获得在能不掉帧的情况下达到最好的效果
# 创建一个基于gpu-hq，用于将一些参数回归到默认的profile：
[high_quality]
profile=gpu-hq
# 默认自动判断解码用线程数
vd-lavc-threads=6

[HD60] # 640p 720p
profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608))
profile=high_quality
glsl-shaders-clr
scale=ewa_lanczossharp
glsl-shaders="~~/shaders/KrigBilateral.glsl;~~/shaders/SSimSuperRes.glsl;~~/shaders/Anime4K_Upscale_CNN_L_x2_Denoise.glsl;~~/shaders/Anime4K_Auto_Downscale_Pre_x4.glsl;~~/shaders/Anime4K_DarkLines_HQ.glsl;~~/shaders/Anime4K_ThinLines_HQ.glsl;~~/shaders/Anime4K_Upscale_CNN_UL_x2_Deblur.glsl" 
sigmoid-upscaling=no # SSimSuperRes推荐关闭sigmoid-upscaling。所以在其他不用SSSR的profile中都要重新设为yes（通过重新设定一遍profile=gpu-hq）。

[KrigBilateral] # 另一个profile的例子
profile=high_quality
glsl-shaders-clr
glsl-shaders="~~/shaders/KrigBilateral.glsl;~~/shaders/Anime4K_Denoise_Bilateral_Mode.glsl;~~/shaders/Anime4K_DarkLines_HQ.glsl;~~/shaders/Anime4K_ThinLines_HQ.glsl;~~/shaders/Anime4K_Upscale_CNN_UL_x2_Deblur.glsl"

[FHD] # 1080p
profile-desc=cond:((p["video-params/w"]<=1920 and p["video-params/h"]<=1080) and (p["video-params/w"]>=1358 or p["video-params/h"]>=764))
profile=KrigBilateral

[2K30] # 1440p
profile-desc=cond:((p["video-params/w"]<=2560 and p["video-params/h"]<=1440) and (p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]<31)
profile=KrigBilateral

# 4K videos
[4K30] # low fps: use SSIM to downscale
profile-desc=cond:((p["video-params/w"]>2560 or p["video-params/h"]>1440) and p["estimated-vf-fps"]<31)
profile=high_quality
glsl-shaders-clr
glsl-shaders-append="~~/shaders/SSimDownscaler.glsl"
linear-downscaling=no # SSimDownscaler要求。需要在其他profile中重新设为yes（通过重新设定一遍profile=gpu-hq）。